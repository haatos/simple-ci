package pages

import "fmt"
import "github.com/haatos/simple-ci/internal/views"
import "github.com/haatos/simple-ci/internal/store"
import "github.com/haatos/simple-ci/internal/views/components"

templ APIKeysPage(user *store.User, apiKeys []*store.APIKey) {
	@views.Layout(user, views.LayoutProps{Title: "App"}) {
		@APIKeysMain(apiKeys)
	}
}

templ APIKeysMain(apiKeys []*store.APIKey) {
	<main class="w-full p-4 border border-base-content/20 rounded-box space-y-4">
		<button
			hx-post="/app/api-keys"
			hx-swap="beforeend"
			hx-target="#api-keys-table"
			class="btn btn-outline"
		>
			Generate API Key
		</button>
		@components.Table(
			"api-keys-table",
			[]templ.Component{
				components.PlainText("ID"),
				components.PlainText("Value"),
				components.PlainText("Created on"),
				components.PlainText(""),
			},
			apiKeysTableRows(apiKeys),
			nil,
		)
	</main>
}

func apiKeysTableRows(apiKeys []*store.APIKey) []templ.Component {
	components := make([]templ.Component, 0)
	for _, ak := range apiKeys {
		components = append(components, APIKeyRow(ak))
	}
	return components
}

templ APIKeyRow(ak *store.APIKey) {
	<tr>
		<td>{ ak.ID }</td>
		<td>
			{ ak.Value }
			@copyAPIKeyButton()
		</td>
		<td>{ ak.CreatedOn.Format("2006 Jan 02") }</td>
		<td>
			@deleteAPIKeyModal(ak)
		</td>
	</tr>
}

templ copyAPIKeyButton() {
	<button class="inline-block ml-2 btn btn-sm btn-ghost">
		@views.CopyIcon("h-6 w-6", "stroke-base-content/70")
		<script>
            ((btn) => {
                btn.addEventListener("click", async (evt) => {
                    await navigator.clipboard.writeText(btn.parentElement.innerText);
                })
            })(document.currentScript.parentElement)
        </script>
	</button>
}

templ deleteAPIKeyModal(ak *store.APIKey) {
	@components.Modal(components.ModalProps{
		ID: fmt.Sprintf("delete_api_key_%d_modal", ak.ID),
		Label: deleteAPIKeyModalButton(
			templ.Attributes{
				"onclick": fmt.Sprintf("delete_api_key_%d_modal.showModal()", ak.ID),
			},
		),
	}) {
		<h2 class="card-title">Confirm delete API key</h2>
		<p>Are you sure you want to delete the API key?</p>
		<p class="mt-8">ID: <b>{ fmt.Sprintf("%d", ak.ID) }</b></p>
		<p>Value: <b>{ ak.Value }</b></p>
		<div class="flex justify-between items-center mt-8">
			<form method="dialog">
				<button class="btn">Cancel</button>
			</form>
			<form
				hx-delete={ fmt.Sprintf("/app/api-keys/%d", ak.ID) }
				hx-swap="none"
			>
				<button
					id="confirm-delete-button"
					type="submit"
					class="btn btn-error"
				>
					Delete
				</button>
				<script>
                            ((form) => {
                                document.addEventListener("htmx:afterRequest", (evt) => {
                                    if (evt.detail.elt === form && evt.detail.successful) {
                                        form.closest("tr").remove()
                                    }
                                })
                            })(document.currentScript.parentElement)
                        </script>
			</form>
		</div>
	}
}

templ deleteAPIKeyModalButton(attrs templ.Attributes) {
	<button { attrs... } class="btn btn-sm btn-ghost">
		@views.TrashIcon()
	</button>
}

templ generateAPIKeyModalButton(attrs templ.Attributes) {
	<div { attrs... } class="btn btn-outline">
		Generate API key
	</div>
}
