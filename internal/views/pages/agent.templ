package pages

import "fmt"
import "github.com/haatos/simple-ci/internal/views"
import "github.com/haatos/simple-ci/internal/store"
import "github.com/haatos/simple-ci/internal/views/components"

templ AgentPage(user *store.User, agent *store.Agent, credentials []*store.Credential) {
	@views.Layout(user, views.LayoutProps{Title: "App"}) {
		@AgentMain(agent, credentials)
	}
}

templ AgentMain(agent *store.Agent, credentials []*store.Credential) {
	<main class="w-full space-y-8 max-w-sm">
		<h2 class="text-xl font-bold">Update agent</h2>
		@AgentUpdateForm(agent, credentials)
	</main>
}

templ AgentUpdateForm(agent *store.Agent, credentials []*store.Credential) {
	<form
		id="update-agent-form"
		hx-patch="/app/agents"
		hx-swap="outerHTML"
	>
		@components.Select(components.SelectProps{
			Label:   "Credentials",
			Name:    "agent_credential_id",
			Options: agentCredentialIDSelectOptions(credentials, agent.AgentCredentialID),
		})
		@components.Input(components.InputProps{
			Label:       "Name",
			Name:        "name",
			Placeholder: "Enter a name...",
			Value:       agent.Name,
		})
		@components.Input(components.InputProps{
			Label:       "Hostname",
			Name:        "hostname",
			Placeholder: "Enter a hostname...",
			Value:       agent.Hostname,
		})
		@components.Input(components.InputProps{
			Label:       "Workspace",
			Name:        "workspace",
			Placeholder: "Enter a workspace path...",
			Value:       agent.Workspace,
		})
		@components.Textarea(components.TextareaProps{
			Label:       "Description",
			Name:        "description",
			Value:       agent.Description,
			Placeholder: "Enter a description...",
			Rows:        3,
			Class:       "resize-none"})
		<input name="agent_id" type="number" class="hidden" { templ.Attributes{"value": fmt.Sprintf("%d", agent.AgentID)}... }/>
	</form>
	<div class="max-w-md flex justify-between items-center mt-6">
		@components.Modal(
			components.ModalProps{
				ID:    "delete_agent_modal",
				Label: deleteAgentModalButton(templ.Attributes{"onclick": "delete_agent_modal.showModal()"}),
			}) {
			<h2 class="text-xl font-bold">Confirm agent deletion</h2>
			<p class="mt-8">Are you sure you want to delete this agent?</p>
			<p id="delete-agent-error" class="text-error"></p>
			<div class="flex justify-between items-center mt-8">
				<form method="dialog">
					<button class="btn">Cancel</button>
				</form>
				<form hx-delete={ fmt.Sprintf("/app/agents/%d", agent.AgentID) }>
					<button
						id="confirm-delete-button"
						type="submit"
						class="btn btn-error"
					>Delete</button>
				</form>
			</div>
		}
		<button
			form="update-agent-form"
			type="submit"
			class="btn btn-primary"
		>
			Update
		</button>
	</div>
}

templ deleteAgentModalButton(attrs templ.Attributes) {
	<div { attrs... } class="btn btn-ghost">
		@views.TrashIcon()
	</div>
}
