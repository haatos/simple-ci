package pages

import "fmt"
import "github.com/haatos/simple-ci/internal/views"
import "github.com/haatos/simple-ci/internal/store"
import "github.com/haatos/simple-ci/internal/views/components"

templ CredentialsPage(user *store.User, credentials []*store.Credential) {
	@views.Layout(user, views.LayoutProps{Title: "App"}) {
		@CredentialsMain(credentials)
	}
}

templ CredentialsMain(credentials []*store.Credential) {
	<main class="w-full p-4 border border-base-content/20 rounded-box space-y-4">
		@components.Modal(
			components.ModalProps{
				ID:    "add_credential_modal",
				Label: addCredentialModalButton(templ.Attributes{"onclick": "add_credential_modal.showModal()"}),
			}) {
			<h2 class="card-title">Add new credential</h2>
			@addNewCredentialForm()
		}
		<div id="credentials-grid" class="grid grid-cols-1 xl:grid-cols-2 gap-4">
			for _, c := range credentials {
				@CredentialCard(c)
			}
		</div>
	</main>
}

templ addNewCredentialForm() {
	<form
		id="add-new-credential-form"
		hx-post="/app/credentials"
		hx-target="#credentials-grid"
		hx-swap="beforeend"
	>
		@components.Input(components.InputProps{
			Label:       "Username*",
			Name:        "username",
			Placeholder: "Enter a username...",
			Required:    true,
		})
		@components.Textarea(components.TextareaProps{
			Label:       "Description",
			Name:        "description",
			Placeholder: "Enter a description...",
			Rows:        3,
			Class:       "resize-none"})
		@components.Textarea(components.TextareaProps{
			Label:       "SSH Private Key*",
			Name:        "ssh_private_key",
			Placeholder: "Enter SSH private key...",
			Description: "The key will be encrypted and stored in a database.",
			Rows:        10,
			Class:       "resize-none",
			Required:    true,
		})
		<script>
            document.addEventListener("htmx:afterRequest", function(evt) {
                if (evt.detail.elt.id === "add-new-credential-form" && !evt.detail.target.className.includes("modal")) {
                    add_credential_modal.close()
                }
            })
        </script>
	</form>
	<div class="flex justify-between items-center mt-8">
		<form method="dialog">
			<button class="btn">Close</button>
		</form>
		<button
			form="add-new-credential-form"
			type="submit"
			class="btn btn-primary"
		>
			Add
		</button>
	</div>
}

templ addCredentialModalButton(attrs templ.Attributes) {
	<div { attrs... } class="btn btn-outline">
		Add credential
	</div>
}

templ CredentialCard(c *store.Credential) {
	@components.Card(
		components.CardProps{
			Title:     c.Username,
			TitleIcon: views.CredentialsIcon(),
			Content:   c.Description,
			Class:     "border border-base-content/20 rounded-box",
		}) {
		@components.Tooltip(components.TooltipProps{Tip: "Edit credential"}) {
			<a
				{ views.NavigationLinkAttrs(fmt.Sprintf("/app/credentials/%d", c.CredentialID))... }
				class="btn btn-sm btn-ghost"
			>
				@views.EditIcon()
			</a>
		}
	}
}
